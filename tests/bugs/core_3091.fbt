{
'id': 'bugs.core_3091',
'qmid': None,
'tracker_id': 'CORE-3091',
'title': 'Built-in function POWER(X, Y) does not work when the X argument is negative and the Y value is scaled numeric but integral',
'description': '',
'min_versions': '2.1.4',
'versions': [
{
 'firebird_version': '2.1.4',
 'platform': 'All',
 'connection_character_set': 'UTF8',
 'page_size': '4096',
 'test_type': 'ISQL',
 'test_script': """select 'power( 3, 2 )', power( 3, 2 ) from RDB$DATABASE
union all
select 'power( -3, 2 )', power( -3, 2 ) from RDB$DATABASE
union all
select 'power( 3, -2 )', power( 3, -2 ) from RDB$DATABASE
union all
select 'power( -3, -2 )', power( -3, -2 ) from RDB$DATABASE
union all
select 'power( 3, 2.0 )', power( 3, 2.0 ) from RDB$DATABASE
union all
select 'power( 3, -2.0 )', power( 3, -2.0 ) from RDB$DATABASE
union all
select 'power( -3, 2.0 )', power( -3, 2.0 ) from RDB$DATABASE
union all
select 'power( -3, -2.0 )', power( -3, -2.0 ) from RDB$DATABASE
union all
select 'power( -3.0, 2 )', power( -3.0, 2 ) from RDB$DATABASE
union all
select 'power( -3.0, 2.0 )', power( -3.0, 2.0 ) from RDB$DATABASE
union all
select 'power( -3.0, -2.0 )', power( -3.0, -2.0 ) from RDB$DATABASE
union all
select 'power( 3.0, -2.0 )', power( 3.0, -2.0 ) from RDB$DATABASE
union all
select 'power( 3.0, 2.0 )', power( 3.0, 2.0 ) from RDB$DATABASE
union all
select 'power( 3.0, 2 )', power( 3.0, 2 ) from RDB$DATABASE
union all
select 'power( 3.0, -2 )', power( 3.0, -2 ) from RDB$DATABASE
;""",
 'expected_stdout': """Database:  localhost:C:\fbtest2\tmp\bugs.core_3091.fdb, User: SYSDBA
SQL> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON> CON>

============================================================================ =======================
power( 3, 2 )                                                                      9.000000000000000
power( -3, 2 )                                                                     9.000000000000000
power( 3, -2 )                                                                    0.1111111111111111
power( -3, -2 )                                                                   0.1111111111111111
power( 3, 2.0 )                                                                    9.000000000000000
power( 3, -2.0 )                                                                  0.1111111111111111
power( -3, 2.0 )                                                                   9.000000000000000
power( -3, -2.0 )                                                                 0.1111111111111111
power( -3.0, 2 )                                                                   9.000000000000000
power( -3.0, 2.0 )                                                                 9.000000000000000
power( -3.0, -2.0 )                                                               0.1111111111111111
power( 3.0, -2.0 )                                                                0.1111111111111111
power( 3.0, 2.0 )                                                                  9.000000000000000
power( 3.0, 2 )                                                                    9.000000000000000
power( 3.0, -2 )                                                                  0.1111111111111111

SQL>"""
}
]
}
