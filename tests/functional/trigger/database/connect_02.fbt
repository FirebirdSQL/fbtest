{
'id': 'functional.trigger.database.connect_02',
'qmid': 'functional.trigger.database.connect_02',
'tracker_id': 'CORE-745',
'title': 'Error handling in trigger on database connect',
'description': 'This test verifies the proper error handling. Uncaught exceptions in trigger roll back the transaction, disconnect the attachment and are returned to the client.',
'min_versions': None,
'versions': [
{
 'firebird_version': '2.1',
 'platform': 'All',
 'init_script': """create table LOG (ID integer, MSG varchar(100));
create generator LOGID;
create exception CONNECTERROR 'Exception in ON CONNECT trigger';
create role TEST;
grant TEST to PUBLIC;
set term ^;
create trigger LOG_BI for LOG active before insert position 0
as
begin
  if (new.ID is null) then
    new.ID = gen_id(LOGID,1);
end ^

create trigger ONCONNECT on connect position 0
as
begin
  insert into LOG (MSG) values ('Connect as ' || current_role);
  if (current_role ='TEST') then
      exception CONNECTERROR;
end ^

set term ;^

commit;
""",
 'test_type': 'Python',
 'test_script': """try:
  con = kdb.connect(dsn=dsn.encode(),user=user_name.encode(),password=user_password.encode(),role='TEST')
except Exception,e:
  for msg in e: print msg

""",
 'expected_stdout': """Error while connecting to database:
- SQLCODE: -836
- exception
- exception 1
- CONNECTERROR
- Exception in ON CONNECT trigger
- At trigger 'ONCONNECT' line: 5, col: 29
-836
335544517
"""
}
]
}
